image:
  name: ghcr.io/maison-de-la-simulation/nova:latest

variables:
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-job:serial:       # This job runs in the build stage, which runs first.
  only: [ main, merge_requests ]
  stage: build
  needs: []
  script:
    - cmake -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_FLAGS="-Wall -Wextra -pedantic" -DKokkos_ENABLE_DEPRECATED_CODE_3=OFF -DKokkos_ENABLE_DEBUG=ON -DKokkos_ENABLE_DEBUG_DUALVIEW_MODIFY_CHECK=ON -DKokkos_ENABLE_DEBUG_BOUNDS_CHECK=ON -DKokkos_ENABLE_COMPILER_WARNINGS=ON -S . -B build
    - cmake --build build
  artifacts:
    expire_in: 1h
    paths:
      - build

build-job:cuda:
  only: [ main, merge_requests ]
  stage: build
  needs: []
  script:
    - cmake -DCMAKE_BUILD_TYPE=None -DCMAKE_CXX_COMPILER=$PWD/vendor/kokkos/bin/nvcc_wrapper -DBUILD_TESTING=OFF -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_FLAGS="-Wall -Wextra -pedantic" -DKokkos_ENABLE_CUDA=ON -DKokkos_ENABLE_CUDA_LAMBDA=ON -DKokkos_ENABLE_CUDA_CONSTEXPR=ON -DKokkos_ARCH_AMPERE80=ON -DKokkos_ENABLE_DEPRECATED_CODE_3=OFF -DKokkos_ENABLE_DEBUG=ON -DKokkos_ENABLE_DEBUG_DUALVIEW_MODIFY_CHECK=ON -DKokkos_ENABLE_DEBUG_BOUNDS_CHECK=ON -DKokkos_ENABLE_COMPILER_WARNINGS=ON -S . -B build
    - cmake --build build

build-job:hip:
  only: [ main, merge_requests ]
  stage: build
  needs: []
  script:
    - cmake -DCMAKE_BUILD_TYPE=None -DCMAKE_CXX_COMPILER=hipcc -DBUILD_TESTING=OFF -DCMAKE_CXX_STANDARD=17 -DCMAKE_CXX_FLAGS="-Wall -Wextra -pedantic" -DKokkos_ENABLE_HIP=ON -DKokkos_ARCH_VEGA90A=ON -DKokkos_ENABLE_DEPRECATED_CODE_3=OFF -DKokkos_ENABLE_DEBUG=ON -DKokkos_ENABLE_DEBUG_DUALVIEW_MODIFY_CHECK=ON -DKokkos_ENABLE_DEBUG_BOUNDS_CHECK=ON -DKokkos_ENABLE_COMPILER_WARNINGS=ON -S . -B build
    - cmake --build build

unit-test-job:   # This job runs in the test stage.
  only: [ main, merge_requests ]
  stage: test    # It only starts when the job in the build stage completes successfully.
  needs: ["build-job:serial"]
  script:
    - ctest --test-dir build --output-on-failure --timeout 5 --output-junit tests.xml
  artifacts:
    when: always
    reports:
      junit: build/tests.xml

lint-test-job:   # This job also runs in the test stage.
  only: [ main, merge_requests ]
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  needs: []
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."
